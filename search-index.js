var searchIndex = {};
searchIndex["mml"] = {"doc":"uml","items":[[5,"rs2dot","mml","The function `rs2dot` returns graphed file module.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"src2dot","","The function `src2dot` returns graphed repository of modules.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"rs2svg","","The function `rs2svg` returns structured vector graphics file modules.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"src2svg","","The function `src2svg` returns structured vector graphics repository of modules.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"src2both","","The function `src2both` creates two files formated like a graph/dot and a structured vector graphics.",null,{"inputs":[{"name":"p"},{"name":"p"}],"output":{"name":"result"}}],[0,"prelude","","The purpose of this module is to provide reexports of core traits so that they can be then glob-imported all at once.",null,null],[0,"core","","Core Syntax and definitions.",null,null],[3,"ListItem","mml::core","",null,null],[0,"segment","","",null,null],[3,"Segment","mml::core::segment","The structure `Segment` contents two nodes.",null,null],[12,"left","","",0,null],[12,"right","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",0,{"inputs":[{"name":"self"}],"output":{"name":"segment"}}],[11,"from","","",0,null],[11,"hash","","",0,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"segment"}],"output":{"name":"bool"}}],[0,"item","mml::core","",null,null],[3,"Item","mml::core::item","The structure Item is a iterable collection of abstract elements.",null,null],[0,"relation","","",null,null],[4,"Relation","mml::core::item::relation","The enumeration `Relation` is the relationship specification from UML 2.5 without generalization.",null,null],[13,"Association","","",1,null],[13,"Aggregation","","",1,null],[13,"Composition","","",1,null],[13,"Realization","","",1,null],[13,"Dependency","","",1,null],[13,"None","","",1,null],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"relation"}}],[11,"as_style","","The method `as_style` returns a stylized arrow (See Table B.2 UML Edges from UML 2.5.",1,{"inputs":[{"name":"self"}],"output":{"name":"arrowshape"}}],[11,"from","","",1,null],[0,"state","mml::core::item","",null,null],[3,"ItemState","mml::core::item::state","The structure `ItemState` describes an abstract element with a collections of methodes and implementations.",null,null],[0,"abstraction","","",null,null],[4,"Abstract","mml::core::item::state::abstraction","The structure `Abstract` is a enumerate for abstract element types or none.",null,null],[13,"Trait","","",2,null],[13,"Struct","","",2,null],[13,"Enum","","",2,null],[13,"None","","",2,null],[0,"extend","","",null,null],[3,"Trait","mml::core::item::state::abstraction::extend","",null,null],[12,"vis","","Visibility",3,null],[12,"name","","",3,null],[12,"params","","",3,null],[12,"items","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",3,{"inputs":[{"name":"self"},{"name":"trait"}],"output":{"name":"bool"}}],[11,"ne","","",3,{"inputs":[{"name":"self"},{"name":"trait"}],"output":{"name":"bool"}}],[11,"clone","","",3,{"inputs":[{"name":"self"}],"output":{"name":"trait"}}],[11,"from","","",3,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"structure","mml::core::item::state::abstraction","",null,null],[3,"Struct","mml::core::item::state::abstraction::structure","The structure `Struct` is a structure abstract element.",null,null],[12,"vis","","",4,null],[12,"name","","",4,null],[12,"fields","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",4,{"inputs":[{"name":"self"},{"name":"struct"}],"output":{"name":"bool"}}],[11,"ne","","",4,{"inputs":[{"name":"self"},{"name":"struct"}],"output":{"name":"bool"}}],[11,"clone","","",4,{"inputs":[{"name":"self"}],"output":{"name":"struct"}}],[11,"from","","",4,null],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"enumerate","mml::core::item::state::abstraction","",null,null],[3,"Enum","mml::core::item::state::abstraction::enumerate","The structure `Enum` is a enumerate abstract element.",null,null],[12,"vis","","",5,null],[12,"name","","",5,null],[12,"params","","",5,null],[12,"variants","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",5,{"inputs":[{"name":"self"},{"name":"enum"}],"output":{"name":"bool"}}],[11,"ne","","",5,{"inputs":[{"name":"self"},{"name":"enum"}],"output":{"name":"bool"}}],[11,"clone","","",5,{"inputs":[{"name":"self"}],"output":{"name":"enum"}}],[11,"from","","",5,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","mml::core::item::state::abstraction","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"abstract"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"abstract"}],"output":{"name":"bool"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"abstract"}}],[11,"as_name","","The method `as_name` returns the name of the abstract element or else declare a panic.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"default","","",2,{"inputs":[],"output":{"name":"abstract"}}],[11,"from","","",2,null],[11,"from","","",2,null],[11,"from","","",2,null],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"implem","mml::core::item::state","",null,null],[3,"Implem","mml::core::item::state::implem","The structure `Implem` is a collection of methods and tyes for an abstract element.",null,null],[11,"default","","",6,{"inputs":[],"output":{"name":"implem"}}],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"self"}],"output":{"name":"implem"}}],[11,"eq","","",6,{"inputs":[{"name":"self"},{"name":"implem"}],"output":{"name":"bool"}}],[11,"ne","","",6,{"inputs":[{"name":"self"},{"name":"implem"}],"output":{"name":"bool"}}],[11,"is_realization","","",6,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"is_association","","",6,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"is_dependency","","",6,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"from","","",6,null],[11,"from","","",6,null],[11,"fmt","","",6,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"method","mml::core::item::state","",null,null],[3,"Method","mml::core::item::state::method","The structure `Method` is a collection of methods from a abstract element.",null,null],[11,"default","","",7,{"inputs":[],"output":{"name":"method"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",7,{"inputs":[{"name":"self"}],"output":{"name":"method"}}],[11,"eq","","",7,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"ne","","",7,{"inputs":[{"name":"self"},{"name":"method"}],"output":{"name":"bool"}}],[11,"is_association","","",7,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"is_dependency","","",7,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"from","","",7,{"inputs":[{"name":"vec"}],"output":{"name":"method"}}],[11,"from","","",7,{"inputs":[{"name":"vec"}],"output":{"name":"method"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","mml::core::item::state","",8,{"inputs":[],"output":{"name":"itemstate"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",8,{"inputs":[{"name":"self"}],"output":{"name":"itemstate"}}],[11,"eq","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"is_none","","",8,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"is_association","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"is_dependency","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"is_aggregation","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"is_composition","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"is_realization","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"is_relation","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"bool"}}],[11,"as_name","","",8,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"as_arrow","","",8,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"relation"}}],[11,"from","","",8,null],[11,"from","","",8,{"inputs":[{"name":"vec"}],"output":{"name":"itemstate"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","mml::core::item","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",9,{"inputs":[{"name":"self"}],"output":{"name":"item"}}],[11,"from","","The constructor method `from` returns a typed and iterable collection of abstract element.",9,{"inputs":[{"name":"peekable"}],"output":{"name":"item"}}],[11,"next","","The method `next` will returns the first abstract elements defined like a structure, enumeration or trait.",9,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"fmt","mml::core","",10,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",10,{"inputs":[{"name":"self"}],"output":{"name":"listitem"}}],[11,"from","","",10,{"inputs":[{"name":"item"}],"output":{"name":"listitem"}}],[11,"from","","",10,{"inputs":[{"name":"peekable"}],"output":{"name":"listitem"}}],[11,"next","","",10,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"graph_id","","",10,{"inputs":[{"name":"self"}],"output":{"name":"id"}}],[11,"node_id","","",10,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"id"}}],[11,"node_shape","","",10,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"option"}}],[11,"node_label","","",10,{"inputs":[{"name":"self"},{"name":"itemstate"}],"output":{"name":"labeltext"}}],[11,"edge_end_arrow","","",10,{"inputs":[{"name":"self"},{"name":"segment"}],"output":{"name":"arrow"}}],[11,"edge_style","","",10,{"inputs":[{"name":"self"},{"name":"segment"}],"output":{"name":"style"}}],[11,"nodes","","",10,{"inputs":[{"name":"self"}],"output":{"name":"nodes"}}],[11,"edges","","",10,{"inputs":[{"name":"self"}],"output":{"name":"edges"}}],[11,"source","","",10,{"inputs":[{"name":"self"},{"name":"segment"}],"output":{"name":"itemstate"}}],[11,"target","","",10,{"inputs":[{"name":"self"},{"name":"segment"}],"output":{"name":"itemstate"}}],[17,"DEFAULT_NAME_DOT","mml","The default name of graph/dot file.",null,null],[17,"DEFAULT_NAME_PNG","","The default name of image/svg file.",null,null]],"paths":[[3,"Segment"],[4,"Relation"],[4,"Abstract"],[3,"Trait"],[3,"Struct"],[3,"Enum"],[3,"Implem"],[3,"Method"],[3,"ItemState"],[3,"Item"],[3,"ListItem"]]};
initSearch(searchIndex);
